kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
  name: {{ .Instance.Name }}
  namespace: {{ .Instance.Namespace }}
  labels:
    app: {{ .Instance.Name }}
    app.kubernetes.io/instance: {{ .Instance.Name }}
    app.kubernetes.io/name: {{ .Instance.Name }}
    app.kubernetes.io/part-of: trustyai
    app.kubernetes.io/version: 0.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Instance.Name }}
      app.kubernetes.io/instance: {{ .Instance.Name }}
      app.kubernetes.io/name: {{ .Instance.Name }}
      app.kubernetes.io/part-of: trustyai
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      labels:
        app: {{ .Instance.Name }}
        app.kubernetes.io/instance: {{ .Instance.Name }}
        app.kubernetes.io/name: {{ .Instance.Name }}
        app.kubernetes.io/part-of: trustyai
        app.kubernetes.io/version: 0.1.0
      annotations:
        prometheus.io/path: /q/metrics
        prometheus.io/scheme: http
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: {{ .Instance.Name }}-proxy
      containers:
        - name: trustyai-service
          image: {{ .ServiceImage }}
          env:
            - name: STORAGE_DATA_FILENAME
              value: {{ .Instance.Spec.Data.Filename }}
            - name: SERVICE_STORAGE_FORMAT
              value: {{ .Instance.Spec.Storage.Format }}
            - name: STORAGE_DATA_FOLDER
              value: {{ .Instance.Spec.Storage.Folder }}
            - name: SERVICE_DATA_FORMAT
              value: {{ .Instance.Spec.Data.Format }}
            - name: SERVICE_METRICS_SCHEDULE
              value: {{ .Instance.Spec.Metrics.Schedule }}
            - name: SERVICE_BATCH_SIZE
              value: {{ .Schedule }}
          volumeMounts:
            - name: {{ .VolumeMountName }}
              mountPath: {{ .Instance.Spec.Storage.Folder }}
              readOnly: false
            {{ if .CustomCertificatesBundle.IsDefined }}
            - name: {{ .CustomCertificatesBundle.VolumeName }}
              readOnly: true
              mountPath: /etc/pki/ca-trust/extracted/pem
            {{ end }}
        - resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 100m
              memory: 64Mi
          readinessProbe:
            httpGet:
              path: /oauth/healthz
              port: oauth-proxy
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          name: oauth-proxy
          livenessProbe:
            httpGet:
              path: /oauth/healthz
              port: oauth-proxy
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          ports:
            - name: oauth-proxy
              containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: {{ .Instance.Name }}-tls
              mountPath: /etc/tls/private
            {{ if .CustomCertificatesBundle.IsDefined }}
            - name: {{ .CustomCertificatesBundle.VolumeName }}
              readOnly: true
              mountPath: /etc/pki/ca-trust/extracted/pem
            {{ end }}
          image: {{ .OAuthImage }}
          args:
            - '--cookie-secret=SECRET'
            - '--https-address=:8443'
            - '--email-domain=*'
            - '--openshift-service-account={{ .Instance.Name }}-proxy'
            - '--provider=openshift'
            {{ if .CustomCertificatesBundle.IsDefined }}
            - '--openshift-ca=/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem'
            {{ end }}
            - '--tls-cert=/etc/tls/private/tls.crt'
            - '--tls-key=/etc/tls/private/tls.key'
            - '--upstream=http://localhost:8080'
            - '--skip-auth-regex=''(^/apis/v1beta1/healthz)'''
            - >-
              --openshift-sar={"namespace":"{{ .Instance.Namespace }}","resource":"pods","verb":"get"}
            - >-
              --openshift-delegate-urls={"/": {"namespace": "{{ .Instance.Namespace }}", "resource":
              "pods", "verb": "get"}}
      serviceAccount: {{ .Instance.Name }}-proxy
      volumes:
        - name: {{ .Instance.Name}}-tls
          secret:
            secretName: {{ .Instance.Name }}-tls
            defaultMode: 420
        - name: volume
          persistentVolumeClaim:
            claimName: {{ .PVCClaimName }}
        {{ if .CustomCertificatesBundle.IsDefined }}
        - name: {{ .CustomCertificatesBundle.VolumeName}}
          configMap:
            name: {{ .CustomCertificatesBundle.ConfigMapName }}
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
            defaultMode: 420
        {{ end }}
