package common

// CABundleConfig defines the CA bundle configuration for custom certificates
type CABundleConfig struct {
	// ConfigMapName is the name of the ConfigMap containing CA bundle certificates
	ConfigMapName string `json:"configMapName"`
	// ConfigMapNamespace is the namespace of the ConfigMap (defaults to the same namespace as the CR)
	// +optional
	ConfigMapNamespace string `json:"configMapNamespace,omitempty"`
	// ConfigMapKeys specifies multiple keys within the ConfigMap containing CA bundle data
	// All certificates from these keys will be concatenated into a single CA bundle file
	// If not specified, defaults to [DefaultCABundleKey]
	// +optional
	// +kubebuilder:validation:MaxItems=50
	// +kubebuilder:validation:Items:Pattern="^[a-zA-Z0-9]([a-zA-Z0-9\\-_.]*[a-zA-Z0-9])?$"
	// +kubebuilder:validation:Items:MaxLength=253
	ConfigMapKeys []string `json:"configMapKeys,omitempty"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CABundleConfig) DeepCopyInto(out *CABundleConfig) {
	*out = *in
	if in.ConfigMapKeys != nil {
		in, out := &in.ConfigMapKeys, &out.ConfigMapKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CABundleConfig.
func (in *CABundleConfig) DeepCopy() *CABundleConfig {
	if in == nil {
		return nil
	}
	out := new(CABundleConfig)
	in.DeepCopyInto(out)
	return out
}
